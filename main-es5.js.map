{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./projects/fourward-utils/src/lib/fourward-form/fourward-form.component.html","webpack:///./projects/fourward-utils/src/lib/fourward-input-mask/fourward-input-mask.component.html","webpack:///./src/app/app.component.html","webpack:///./projects/fourward-utils/src/lib/fourward-form/field-form.ts","webpack:///./projects/fourward-utils/src/lib/fourward-form/fourward-form.component.scss","webpack:///./projects/fourward-utils/src/lib/fourward-form/fourward-form.component.ts","webpack:///./projects/fourward-utils/src/lib/fourward-form/fourward-form.module.ts","webpack:///./projects/fourward-utils/src/lib/fourward-form/fourward-form.service.ts","webpack:///./projects/fourward-utils/src/lib/fourward-input-mask/fourward-input-mask.component.ts","webpack:///./projects/fourward-utils/src/lib/fourward-input-mask/fourward-input-mask.module.ts","webpack:///./projects/fourward-utils/src/public-api.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<form [formGroup]=\\\"fourwardFormGroup\\\">\\n  <div [class]=\\\"rowContainerClass\\\">\\n    <ng-template ngFor let-field [ngForOf]=\\\"fields\\\" let-i=\\\"index\\\" let-odd=\\\"odd\\\">\\n      <div [ngClass]=\\\"field.containerClass\\\">\\n        <label *ngIf=\\\"field.type !== fieldType.CHECKBOX && field.type !== fieldType.INPUTFILE\\\" [for]=\\\"field.id\\\">{{\\n          field.label\\n        }}</label>\\n\\n        <!-- Para inputs tipo: texto -->\\n        <nfu-input-mask\\n          *ngIf=\\\"field.type === fieldType.TEXT\\\"\\n          [placeholder]=\\\"field.placeholder || ''\\\"\\n          [id]=\\\"field.id\\\"\\n          [type]=\\\"field.maskType || 'noFormat'\\\"\\n          [name]=\\\"field.name\\\"\\n          [formControlName]=\\\"field.name\\\"\\n          [className]=\\\"\\n            field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid\\n              ? field.inputClass + ' is-invalid'\\n              : field.inputClass\\n          \\\"\\n        ></nfu-input-mask>\\n\\n        <!-- Para inputs tipo: autocomplete -->\\n\\n        <p-autoComplete\\n          *ngIf=\\\"field.type === fieldType.AUTOCOMPLETE\\\"\\n          [field]=\\\"field.name\\\"\\n          [style]=\\\"{ width: '100%' }\\\"\\n          [inputStyle]=\\\"{ width: '100%' }\\\"\\n          [formControlName]=\\\"field.name\\\"\\n          [placeholder]=\\\"field.placeholder || ''\\\"\\n          [suggestions]=\\\"autoCompleteSugestions\\\"\\n          (completeMethod)=\\\"autoCompleteMethod.emit($event)\\\"\\n        >\\n          <ng-template let-item pTemplate=\\\"item\\\">\\n            <div>\\n              <span>{{ item.name }}</span>\\n            </div>\\n          </ng-template>\\n        </p-autoComplete>\\n\\n        <!-- Para inputs tipo: dropbox -->\\n        <select\\n          *ngIf=\\\"field.type === fieldType.DROPDOWN\\\"\\n          [id]=\\\"field.id\\\"\\n          [formControlName]=\\\"field.name\\\"\\n          [class]=\\\"field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid ? 'is-invalid' : ''\\\"\\n          [name]=\\\"field.name\\\"\\n          [ngClass]=\\\"field.inputClass\\\"\\n        >\\n          <ng-template ngFor let-option [ngForOf]=\\\"field.options\\\">\\n            <option [value]=\\\"option.value\\\">{{ option.key }}</option>\\n          </ng-template>\\n        </select>\\n\\n        <!-- Para inputs tipo: textarea -->\\n        <textarea\\n          *ngIf=\\\"field.type === fieldType.TEXTAREA\\\"\\n          [placeholder]=\\\"field.placeholder || ''\\\"\\n          [formControlName]=\\\"field.name\\\"\\n          [name]=\\\"field.name\\\"\\n          [id]=\\\"field.id\\\"\\n          [value]=\\\"field.defaultValue\\\"\\n          [class]=\\\"field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid ? 'is-invalid' : ''\\\"\\n          [ngClass]=\\\"field.inputClass\\\"\\n          cols=\\\"30\\\"\\n          rows=\\\"5\\\"\\n        ></textarea>\\n\\n        <!-- Para inputs tipo: File -->\\n        <div\\n          class=\\\"field.inputClass\\\"\\n          *ngIf=\\\"field.type === fieldType.INPUTFILE\\\"\\n          style=\\\"margin-left: 0px;margin-right: 0px\\\"\\n        >\\n          <label class=\\\"col-md-3 col-form-label\\\" [for]=\\\"field.id\\\">{{ field.label }}</label>\\n          <div class=\\\"col-md-9\\\">\\n            <input\\n              [placeholder]=\\\"field.placeholder || ''\\\"\\n              [id]=\\\"field.id\\\"\\n              [name]=\\\"field.name\\\"\\n              [class]=\\\"\\n                field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid ? 'is-invalid' : ''\\n              \\\"\\n              [placeholder]=\\\"field.placeholder || ''\\\"\\n              [type]=\\\"field.type\\\"\\n              [value]=\\\"\\n                field.hasDataPipe ? (field.defaultValue || '' | date: 'dd/MM/yyyy HH:mm') : field.defaultValue || ''\\n              \\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <!-- Para inputs tipo: Checkbox -->\\n        <div *ngIf=\\\"field.type === fieldType.CHECKBOX\\\" class=\\\"form-check form-check-inline\\\">\\n          <input\\n            [ngClass]=\\\"field.inputClass\\\"\\n            class=\\\"form-check-input\\\"\\n            [formControlName]=\\\"field.name\\\"\\n            id=\\\"inline-checkbox1\\\"\\n            type=\\\"checkbox\\\"\\n            [checked]=\\\"field.defaultValue\\\"\\n            value=\\\"true\\\"\\n          />\\n          <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">{{\\n            field.defaultValue ? field.labelTrue : field.labelFalse\\n          }}</label>\\n        </div>\\n\\n        <!-- Para inputs tipo: Datepick -->\\n        <p-calendar\\n          *ngIf=\\\"field.type === fieldType.DATEPICKER\\\"\\n          [placeholder]=\\\"field.placeholder || ''\\\"\\n          [id]=\\\"field.id\\\"\\n          [name]=\\\"field.name\\\"\\n          [dateFormat]=\\\"'dd/mm/yy'\\\"\\n          [formControlName]=\\\"field.name\\\"\\n          [appendTo]=\\\"'body'\\\"\\n          [styleClass]=\\\"field.inputClass\\\"\\n          [style]=\\\"{ padding: '0', border: 'none' }\\\"\\n          [inputStyleClass]=\\\"\\n            field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid\\n              ? 'is-invalid ' + field.inputClass\\n              : field.inputClass\\n          \\\"\\n          [inputStyle]=\\\"\\n            field.required && isSubmited && fourwardFormGroup.controls[field.name].invalid\\n              ? { borderColor: '#dc3545', color: '#808194' }\\n              : { borderColor: '#d3d4da', color: '#808194' }\\n          \\\"\\n        ></p-calendar>\\n      </div>\\n    </ng-template>\\n\\n    <div [ngClass]=\\\"btnContainerClass\\\">\\n      <button *ngIf=\\\"actionBtn1Enabled && !isLoading\\\" [ngClass]=\\\"actionBtn1Class\\\" (click)=\\\"actionButton1Click()\\\">\\n        <i [ngClass]=\\\"actionBtn1Icon\\\"></i> {{ actionBtn1Label }}\\n      </button>\\n      <button *ngIf=\\\"actionBtn1Enabled && isLoading\\\" type=\\\"button\\\" [ngClass]=\\\"actionBtn1Class\\\">\\n        <i [class]=\\\"loadingIndicatorClass\\\"></i>&nbsp;Aguarde...\\n      </button>\\n\\n      <button *ngIf=\\\"actionBtn2Enabled\\\" [ngClass]=\\\"actionBtn2Class\\\" (click)=\\\"actionButton2Click()\\\">\\n        <i [ngClass]=\\\"actionBtn2Icon\\\"></i> {{ actionBtn2Label }}\\n      </button>\\n      <button *ngIf=\\\"cancelBtnEnabled\\\" type=\\\"reset\\\" [ngClass]=\\\"cancelBtnClass\\\" (click)=\\\"cancelButtonClick()\\\">\\n        <i [ngClass]=\\\"cancelBtnIcon\\\"></i> {{ cancelBtnLabel }}\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"<input\\n  type=\\\"text\\\"\\n  [id]=\\\"id\\\"\\n  [placeholder]=\\\"placeholder\\\"\\n  [name]=\\\"name\\\"\\n  [disabled]=\\\"disabled\\\"\\n  (ngModelChange)=\\\"changeEvent($event)\\\"\\n  [class]=\\\"className\\\"\\n  [maxlength]=\\\"maxLength\\\"\\n  [ngModel]=\\\"value\\\"\\n/>\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<label for=\\\"\\\">Seu nome</label>\\n<br>\\n<nfu-input-mask [type]=\\\"'text'\\\" placeholder=\\\"Texto de exempo\\\" id=\\\"nome\\\" name=\\\"nome\\\"></nfu-input-mask>\\n\\n\"","import { KeyValue } from '@angular/common';\n\nexport interface FieldForm {\n  type: FieldType;\n  name: string;\n  label: string;\n  labelTrue?: string;\n  labelFalse?: string;\n  id?: string;\n  maskType?: string;\n  required?: boolean;\n  disabled?: boolean;\n  containerClass?: string;\n  inputClass?: string;\n  placeholder?: string;\n  hasDataPipe?: boolean;\n  hasCurrencyPipe?: boolean;\n  options?: KeyValue<string, any>[];\n  defaultValue?: any;\n}\n\nexport enum FieldType {\n  TEXT = 'text',\n  PASSWORD = 'password',\n  DROPDOWN = 'dropdown',\n  RADIO = 'radio',\n  CHECKBOX = 'checkbox',\n  TEXTAREA = 'textarea',\n  DATEPICKER = 'datepicker',\n  INPUTFILE = 'file',\n  AUTOCOMPLETE = 'autocomplete'\n}\n\nexport class FormResult {\n  success: boolean;\n  data: any;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9mb3Vyd2FyZC11dGlscy9zcmMvbGliL2ZvdXJ3YXJkLWZvcm0vZm91cndhcmQtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FieldForm, FieldType, FormResult } from './field-form';\n\n@Component({\n  selector: 'nfu-form',\n  templateUrl: './fourward-form.component.html',\n  styleUrls: ['./fourward-form.component.scss']\n})\nexport class FourwardFormComponent implements OnInit {\n  @Input() fields: FieldForm[] = [];\n  @Input() rowContainerClass: string;\n  @Input() loadingIndicatorClass: string;\n  @Input() btnContainerClass: string;\n  @Input() actionBtn1Enabled = false;\n  @Input() actionBtn1Label: string;\n  @Input() actionBtn1Class: string;\n  @Input() actionBtn1Icon: string;\n  @Input() actionBtn2Enabled = false;\n  @Input() actionBtn2Label: string;\n  @Input() actionBtn2Class: string;\n  @Input() actionBtn2Icon: string;\n  @Input() cancelBtnEnabled = false;\n  @Input() cancelBtnLabel: string;\n  @Input() cancelBtnIcon: string;\n  @Input() cancelBtnClass: string;\n  @Input() isLoading: boolean;\n  @Input() getRawValue = true;\n  @Input() autoCompleteSugestions: any[] = [];\n\n  @Output() actionBtn1Click = new EventEmitter();\n  @Output() actionBtn2Click = new EventEmitter();\n  @Output() cancelBtnClick = new EventEmitter();\n  @Output() autoCompleteMethod = new EventEmitter();\n\n  isSubmited = false;\n  fieldType = FieldType;\n  fourwardFormGroup: FormGroup;\n  subscriptionSendFormData1: Subscription;\n  subscriptionSendFormData2: Subscription;\n  subscriptionSendFormData3: Subscription;\n  subscritionRecriateFormField: Subscription;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.generateReactiveForm();\n  }\n\n  public actionButton1Click(): void {\n    this.actionBtn1Click.emit(this.submitForm());\n  }\n  public actionButton2Click(): void {\n    this.actionBtn2Click.emit(this.submitForm());\n  }\n\n  public cancelButtonClick(): void {\n    this.fourwardFormGroup.reset();\n    this.cancelBtnClick.emit();\n  }\n\n  private submitForm(): FormResult {\n    this.isSubmited = true;\n    const formResult = new FormResult();\n    formResult.data = this.getRawValue ? this.fourwardFormGroup.getRawValue() : this.fourwardFormGroup.value;\n    formResult.success = this.fourwardFormGroup.valid;\n\n    this.fourwardFormGroup.reset();\n    this.isSubmited = !formResult.success;\n    return formResult;\n  }\n\n  private generateReactiveForm(): void {\n    const controls: any = {};\n\n    this.fields.forEach((el: FieldForm) => {\n      controls[el.name] = this.prepareFieldControl(el);\n    });\n\n    this.fourwardFormGroup = this.fb.group(controls);\n  }\n\n  private prepareFieldControl(field: FieldForm): FormControl {\n    const defaultValue = field.type === FieldType.DROPDOWN ? field.options[0].value : field.defaultValue;\n    return new FormControl(\n      {\n        value: defaultValue,\n        disabled: field.disabled\n      },\n      field.required ? Validators.required : null\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FourwardFormComponent } from './fourward-form.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FourwardInputMaskModule } from '../fourward-input-mask/fourward-input-mask.module';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { CalendarModule } from 'primeng/calendar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FourwardInputMaskModule,\n    AutoCompleteModule,\n    CalendarModule\n  ],\n  exports: [FourwardFormComponent],\n  declarations: [FourwardFormComponent],\n  providers: []\n})\nexport class FourwardFormModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FieldForm } from './field-form';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FourwardFormService {\n  /* Recriar os campos do formulario */\n  private recriateFormSubject = new Subject<FieldForm[]>();\n  public recriateFormFields$ = this.recriateFormSubject.asObservable();\n\n  /* Subjects usado para avisar o fourwardForm que uma ação foi tomada no component Pai */\n  private submitFormAction1Subject = new Subject<string>();\n  private submitFormAction2Subject = new Subject<string>();\n  private submitFormAction3Subject = new Subject<string>();\n\n  /* Subjects para enviar os dados e o status da validação  do formulario */\n  private sendDataFormAction1 = new Subject<any>();\n  private sendDataFormAction2 = new Subject<any>();\n  private sendDataFormAction3 = new Subject<any>();\n\n  /* Observables que o fouwardForm está \"Escutando\" para realizar a ação de enviar os dados e o\n  status de validação do formulario */\n  public submitDataFormAction1$ = this.submitFormAction1Subject.asObservable();\n  public submitDataFormAction2$ = this.submitFormAction2Subject.asObservable();\n  public submitDataFormAction3$ = this.submitFormAction3Subject.asObservable();\n\n  /* Observables que os componentes PAI devem \"Escutar\" para receber os dados e o status de\n  validação do fouwardForm\n  */\n  public sendFormDataObs1$ = this.sendDataFormAction1.asObservable();\n  public sendFormDataObs2$ = this.sendDataFormAction2.asObservable();\n  public sendFormDataObs3$ = this.sendDataFormAction3.asObservable();\n\n  constructor() {}\n\n  /* Métodos utilizados para \"TRIGGAR\" os eventos do component PAI para o fouwardForm\n   Component pai deve \"Chamar\" este método na execução de uma ação da tela ex: Click em botões, etc...\n  */\n  public dataFormAction1(senderComponent?: string): void {\n    this.submitFormAction1Subject.next(senderComponent);\n  }\n\n  public dataFormAction2(senderComponent?: string): void {\n    this.submitFormAction2Subject.next(senderComponent);\n  }\n\n  public dataFormAction3(senderComponent?: string): void {\n    this.submitFormAction3Subject.next(senderComponent);\n  }\n\n  /* Métodos utilizados para \"TRIGGAR\" os eventos de envio dos dados e status do fouwardForm  para o  component PAI\n    Estes métodos são apenas do componente fouwardForm e não devem ser chamados em outros componentes\n  */\n  public sendFormData1(formData: any): void {\n    this.sendDataFormAction1.next(formData);\n  }\n\n  public sendFormData2(formData: any): void {\n    this.sendDataFormAction2.next(formData);\n  }\n\n  public sendFormData3(formData: any): void {\n    this.sendDataFormAction3.next(formData);\n  }\n\n  /* Recriando formulario em Modo lazy */\n  public recriateForm(fieldForms: FieldForm[]) {\n    this.recriateFormSubject.next(fieldForms);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const InputType = {\n  CPF: 'cpf',\n  CNPJ: 'cnpj',\n  PHONE: 'phone',\n  CURRENCY: 'currency',\n  PERCENT: 'percent',\n  ZIPCODE: 'zipcode',\n  NO_FORMAT: 'noFormat',\n  NUMBER: 'number'\n};\n\n@Component({\n  selector: 'nfu-input-mask',\n  templateUrl: './fourward-input-mask.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FourwardInputMaskComponent,\n      multi: true\n    }\n  ]\n})\nexport class FourwardInputMaskComponent implements ControlValueAccessor, OnInit {\n  @Input() className: string;\n  @Input() type = InputType.CPF;\n  @Input() placeholder: string;\n  @Input() name: string;\n  @Input() id: string;\n  @Input() disabled = false;\n  @Input() maxLength = 50;\n  value = '';\n  maskFormatMap: Map<string, (param: any) => string> = new Map();\n\n  propagateOnChange: (value: any) => void;\n\n  ngOnInit(): void {\n    this.setDefaultMaxLength();\n    this.setFormatMask();\n  }\n\n  changeEvent(event: any) {\n    this.setDefaultMaxLength();\n\n    let noFormatText = event;\n\n    if (this.type !== InputType.NO_FORMAT) {\n      noFormatText = event.replace(/\\D/g, '');\n    }\n\n    const inputField = document.querySelector('#' + this.id) as HTMLInputElement;\n\n    if (!noFormatText.length) {\n      this.value = '';\n      inputField.value = '';\n      this.propagateOnChange('');\n      return;\n    }\n    this.value = this.maskFormatMap.get(this.type)(noFormatText);\n    if (this.type === InputType.CURRENCY || this.type === InputType.PERCENT) {\n      let numberValue = this.value.replace('.', '');\n      numberValue = numberValue.replace(',', '.');\n      this.propagateOnChange(parseFloat(numberValue));\n      return;\n    }\n    this.propagateOnChange(this.value);\n  }\n\n  writeValue(obj: string): void {\n    if (obj) {\n      this.type === InputType.CPF\n        ? (this.value = this.formatToCpf(obj))\n        : this.type === InputType.CNPJ\n        ? (this.value = this.formatToCnpj(obj))\n        : this.type === InputType.PHONE\n        ? (this.value = this.formatToPhone(obj))\n        : this.type === InputType.PHONE\n        ? (this.value = this.formatToCurrency(obj.toString()))\n        : this.type === InputType.PERCENT\n        ? (this.value = this.formatToPercent(obj.toString()))\n        : this.type === InputType.ZIPCODE\n        ? (this.value = this.formatToZipCode(obj))\n        : (this.value = this.formatToNothing(obj));\n    } else {\n      this.value = '';\n    }\n  }\n  registerOnChange(fn: any): void {\n    this.propagateOnChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    // todo\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private formatToCpf(v: string): string {\n    v = v.replace(/\\D/g, ''); // Remove tudo o que não é dígito\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2'); // Coloca um ponto entre o terceiro e o quarto dígitos\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2'); // Coloca um ponto entre o terceiro e o quarto dígitos\n    // de novo (para o segundo bloco de números)\n    v = v.replace(/(\\d{3})(\\d{1,2})$/, '$1-$2'); // Coloca um hífen entre o terceiro e o quarto dígitos\n    return v;\n  }\n\n  private formatToCnpj(v: string): string {\n    v = v.replace(/\\D/g, ''); // Remove tudo o que não é dígito\n    v = v.replace(/^(\\d{2})(\\d)/, '$1.$2'); // Coloca ponto entre o segundo e o terceiro dígitos\n    v = v.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3'); // Coloca ponto entre o quinto e o sexto dígitos\n    v = v.replace(/\\.(\\d{3})(\\d)/, '.$1/$2'); // Coloca uma barra entre o oitavo e o nono dígitos\n    v = v.replace(/(\\d{4})(\\d)/, '$1-$2'); // Coloca um hífen depois do bloco de quatro dígitos\n    return v;\n  }\n\n  private formatToPhone(v: string): string {\n    v = v.replace(/\\D/g, ''); // Remove tudo o que não é dígito\n\n    if (v.length <= 5) {\n      v = v.replace(/^(\\d{2})(\\d{1,3})/, '($1) $2'); // Separa o DDD do telefone\n    } else if (v.length > 6 && v.length <= 10) {\n      v = v.replace(/(\\d{2})(\\d{1,4})(\\d{1,4})/, '($1) $2-$3'); // Separa o DDD e ajusta os digitos do celular\n    } else {\n      v = v.replace(/(\\d{2})(\\d{1,5})(\\d{1,4})/, '($1) $2-$3'); // Separa o DDD e ajusta os digitos do celular\n    }\n\n    if (v.length === 0) {\n      return null;\n    }\n    return v;\n  }\n\n  private formatToCurrency(v: string): string {\n    v = v.replace(/\\D/g, '');\n\n    if (v.length === 3) {\n      v = v.replace(/(\\d{1})(\\d{2})/, '$1,$2');\n    } else if (v.length === 4) {\n      v = v.replace(/(\\d{2})(\\d{2})/, '$1,$2');\n    } else if (v.length === 5) {\n      v = v.replace(/(\\d{3})(\\d{2})/, '$1,$2');\n    } else if (v.length === 6) {\n      v = v.replace(/(\\d{1})(\\d{3})(\\d{2})/, '$1.$2,$3');\n    } else if (v.length === 7) {\n      v = v.replace(/(\\d{2})(\\d{3})(\\d{2})/, '$1.$2,$3');\n    } else if (v.length === 8) {\n      v = v.replace(/(\\d{3})(\\d{3})(\\d{2})/, '$1.$2,$3');\n    } else if (v.length === 9) {\n      v = v.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3,$4');\n    } else if (v.length === 10) {\n      v = v.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3,$4');\n    } else if (v.length === 11) {\n      v = v.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3,$4');\n    } else if (v.length === 12) {\n      v = v.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3.$4,$5');\n    } else {\n      v = v.replace(/(\\d{10,})(\\d{2})/, '$1.$2');\n    }\n\n    if (v.length === 0) {\n      return '0,00';\n    }\n\n    return v;\n  }\n\n  private formatToPercent(v: string): string {\n    v = v.replace(/\\D/g, '');\n    if (v.length >= 3) {\n      v = v.replace(/(\\d{1,12})(\\d{2})/, '$1,$2');\n    }\n\n    if (v.length === 0) {\n      return '0';\n    }\n\n    return v;\n  }\n\n  private formatToNumber(v: string): string {\n    v = v.replace(/\\D/g, '');\n    return v;\n  }\n\n  private formatToZipCode(v: string): string {\n    v = v.replace(/\\D/g, '');\n\n    if (v.length === 3) {\n      v = v.replace(/(\\d{2})(\\d{1})/, '$1.$2');\n    } else if (v.length === 4) {\n      v = v.replace(/(\\d{2})(\\d{2})/, '$1.$2');\n    } else if (v.length === 5) {\n      v = v.replace(/(\\d{2})(\\d{3})/, '$1.$2');\n    } else if (v.length === 6) {\n      v = v.replace(/(\\d{2})(\\d{3})(\\d{1})/, '$1.$2-$3');\n    } else if (v.length === 7) {\n      v = v.replace(/(\\d{2})(\\d{3})(\\d{2})/, '$1.$2-$3');\n    } else if (v.length === 8) {\n      v = v.replace(/(\\d{2})(\\d{3})(\\d{3})/, '$1.$2-$3');\n    }\n\n    if (v.length === 0) {\n      return '';\n    }\n\n    return v;\n  }\n\n  private formatToNothing(v: string): string {\n    return v;\n  }\n\n  private setDefaultMaxLength(): void {\n    if (this.type === InputType.ZIPCODE) {\n      this.maxLength = 10;\n    }\n\n    if (this.type === InputType.CPF) {\n      this.maxLength = 14;\n    }\n\n    if (this.type === InputType.CNPJ) {\n      this.maxLength = 18;\n    }\n  }\n  private setFormatMask(): void {\n    this.maskFormatMap.set(InputType.CPF, text => this.formatToCpf(text));\n    this.maskFormatMap.set(InputType.CNPJ, text => this.formatToCnpj(text));\n    this.maskFormatMap.set(InputType.PHONE, text => this.formatToPhone(text));\n    this.maskFormatMap.set(InputType.NUMBER, text => this.formatToNumber(text));\n    this.maskFormatMap.set(InputType.NO_FORMAT, text => this.formatToNothing(text));\n    this.maskFormatMap.set(InputType.ZIPCODE, text => this.formatToZipCode(text));\n    this.maskFormatMap.set(InputType.CURRENCY, text => this.formatToCurrency(text));\n    this.maskFormatMap.set(InputType.PERCENT, text => this.formatToPercent(text));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { FourwardInputMaskComponent } from './fourward-input-mask.component';\n@NgModule({\n  declarations: [FourwardInputMaskComponent],\n  exports: [FourwardInputMaskComponent],\n  imports: [CommonModule, FormsModule]\n})\nexport class FourwardInputMaskModule {}\n","/*\n * Public API Surface of fourward-utils\n */\n\n/* Form Module */\nexport * from './lib/fourward-form/field-form';\nexport * from './lib/fourward-form/fourward-form.component';\nexport * from './lib/fourward-form/fourward-form.module';\nexport * from './lib/fourward-form/fourward-form.service';\n\n/* InputMask Module */\nexport * from './lib/fourward-input-mask/fourward-input-mask.component';\nexport * from './lib/fourward-input-mask/fourward-input-mask.module';\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-fourward-utils';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FourwardInputMaskModule, FourwardFormModule } from 'projects/fourward-utils/src/public-api';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FourwardInputMaskModule, FourwardFormModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export const environment = {\n  production: false,\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}